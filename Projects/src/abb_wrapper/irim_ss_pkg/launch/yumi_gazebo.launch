<launch>

  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="verbose" default="true" />
  <arg name="load_gripper" default="true" />
  <arg name="collision_scene" default="true" />
  <arg name="pub_clock_frequency" default="500"/>

  <arg name="controller_config_file" default="$(find irim_ss_pkg)/config/yumi_controllers.yaml" />
  <arg name="controllers" default="joint_state_controller robot_controller gripper_controller"/>

  <!--launch GAZEBO with own world configuration -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="$(arg debug)" />
      <arg name="verbose" value="$(arg verbose)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)" />
      <arg name="use_sim_time" value="$(arg use_sim_time)" />
      <arg name="headless" value="$(arg headless)" />
      <arg name="pub_clock_frequency" value="$(arg pub_clock_frequency)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find irim_ss_pkg)/xacro/irim_yumi.urdf.xacro" />


  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
  
    <!-- Load controller settings -->
  <rosparam file="$(arg controller_config_file)" command="load"/>

  <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner"
    args="$(arg controllers)" output="screen" respawn="false" />

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model yumi " />


  <!-- MOVEIT -->

  <arg name="fake_execution_type" default="interpolate" />
  <arg name="pipeline" default="ompl" />
  <arg name="load_robot_description" default="false"/>
  <arg name="use_rviz" default="true" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find yumi_single_arm_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="moveit_controller_manager" value="ros_control" />
    <arg name="fake_execution_type" value="$(arg fake_execution_type)"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <include file="$(find yumi_single_arm_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
    <arg name="rviz_config" value="$(find irim_ss_pkg)/config/moveit.rviz"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- <node name="spawn_dice" pkg="gazebo_ros" type="spawn_model" args="-urdf -file $(find robots_description)/xacro/Extra/dice.urdf -model dice -z 0.9 -R 1.0 -P 1.0 -Y 1.0 "
  launch-prefix="bash -c 'sleep 20; $0 $@' " /> -->

  <node name="spawn_dice_py" pkg="irim_ss_pkg" type="dice.py" output="screen"/>
  
  <node name="gripper_simulation" pkg="irim_ss_pkg" type="gripper_simulation.py" />
  

  <!-- Load Collision Scene for planning -->
  <include file="$(find abb_wrapper_control)/launch/launchCollisionObject.launch" if="$(arg collision_scene)">
  </include>

</launch>
